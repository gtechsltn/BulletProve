<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LTest.Http</name>
    </assembly>
    <members>
        <member name="T:LTest.Http.Configuration.HttpConfiguration">
            <summary>
            Configuration.
            </summary>
        </member>
        <member name="M:LTest.Http.Configuration.HttpConfiguration.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:LTest.Http.Configuration.HttpConfiguration"/> class.
            </summary>
            <param name="httpHeaderLogMaxLength">The maximum length of a http header content to log.</param>
            <param name="httpContentLogMaxLength">The maximum length of a http message content to log.</param>
        </member>
        <member name="P:LTest.Http.Configuration.HttpConfiguration.HttpHeaderLogMaxLength">
            <summary>
            The maximum length of a http header content to log.
            </summary>
        </member>
        <member name="P:LTest.Http.Configuration.HttpConfiguration.HttpContentLogMaxLength">
            <summary>
            The maximum length of a http message content to log.
            </summary>
        </member>
        <member name="T:LTest.Http.Configuration.HttpConfigurationBuilder">
            <summary>
            Configuration builder.
            </summary>
        </member>
        <member name="M:LTest.Http.Configuration.HttpConfigurationBuilder.SetHttpHeaderLogMaxLength(System.Int32)">
            <summary>
            Sets the max length of the http header log. Default is 50.
            </summary>
            <param name="value">The new value.</param>
        </member>
        <member name="M:LTest.Http.Configuration.HttpConfigurationBuilder.SetHttpContentLogMaxLength(System.Int32)">
            <summary>
            Sets the max length of the request / response content log. Default is 1000.
            </summary>
            <param name="value">The new value.</param>
        </member>
        <member name="M:LTest.Http.Configuration.HttpConfigurationBuilder.Build">
            <summary>
            Returns a new <see cref="T:LTest.Http.Configuration.HttpConfiguration"/> instance.
            </summary>
        </member>
        <member name="T:LTest.Http.Helpers.LogHelper">
            <summary>
            Helper class for logs.
            </summary>
        </member>
        <member name="M:LTest.Http.Helpers.LogHelper.CreateRequestLog(System.Net.Http.HttpRequestMessage,System.String,System.Net.Http.HttpClient,LTest.Http.Configuration.HttpConfiguration)">
            <summary>
            Creates log for http request.
            </summary>
            <param name="request">Http request.</param>
            <param name="label">Label.</param>
            <param name="client">Http client.</param>
            <param name="configuration">Configuration.</param>
        </member>
        <member name="M:LTest.Http.Helpers.LogHelper.CreateResponseLog(System.Net.Http.HttpResponseMessage,System.Int64,LTest.Http.Configuration.HttpConfiguration)">
            <summary>
            Creates log for http response.
            </summary>
            <param name="response">Http response.</param>
            <param name="elapsedMilliseconds">Elapsed milliseconds.</param>
            <param name="configuration">Configuration.</param>
        </member>
        <member name="T:LTest.Http.Interfaces.IAfterHttpRequestBehavior">
            <summary>
            A service that will be run after server Http request was send.
            </summary>
        </member>
        <member name="T:LTest.Http.Interfaces.IBeforeHttpRequestBehavior">
            <summary>
            A service that will be run before server Http request.
            </summary>
        </member>
        <member name="T:LTest.Http.EmptyResponse">
            <summary>
            A helper model for empty http body.
            </summary>
        </member>
        <member name="T:LTest.Http.Services.AssertBuilder`1">
            <summary>
            A helper class for json http response.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
        </member>
        <member name="M:LTest.Http.Services.AssertBuilder`1.#ctor(System.Net.Http.HttpRequestMessage,System.IServiceProvider,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LTest.Http.Services.AssertBuilder`1"/> class.
            </summary>
            <param name="request">Http request message.</param>
            <param name="serviceProvider">Service provider.</param>
            <param name="restoreUnexpectedLogSnifferEventAction">Restore LogSniffer.</param>
            <param name="label">Label to be logged.</param>
        </member>
        <member name="M:LTest.Http.Services.AssertBuilder`1.EnsureSuccessStatusCode">
            <summary>
            Ensures that the status code of the response is in [200-299].
            </summary>
        </member>
        <member name="M:LTest.Http.Services.AssertBuilder`1.AssertStatusCode(System.Net.HttpStatusCode)">
            <summary>
            Runs assert login on response statuscode.
            </summary>
            <param name="statusCode">Expected status code.</param>
        </member>
        <member name="M:LTest.Http.Services.AssertBuilder`1.AssertResponseObject(System.Action{`0})">
            <summary>
            Runs assert logic on the response.
            </summary>
            <param name="assertAction">Assert action.</param>
        </member>
        <member name="M:LTest.Http.Services.AssertBuilder`1.AssertResponseMessage(System.Action{System.Net.Http.HttpResponseMessage})">
            <summary>
            Runs assert logic on the response message.
            </summary>
            <param name="assertAction">Assert action.</param>
        </member>
        <member name="M:LTest.Http.Services.AssertBuilder`1.AssertLogSnifferEvents(System.Action{System.Collections.Generic.List{LTest.LogSniffer.LogSnifferEvent}})">
            <summary>
            Runs assert logic on LogSniffer events.
            </summary>
            <param name="assertAction">Assert action.</param>
        </member>
        <member name="M:LTest.Http.Services.AssertBuilder`1.Execute">
            <summary>
            Executes the query and assertions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LTest.Http.Services.AssertBuilder`1.ToCurl">
            <summary>
            Generates curl from the request.
            </summary>
        </member>
        <member name="T:LTest.Http.Services.HttpMethodService">
            <summary>
            A service that can determine the HTTP method of a controller action.
            </summary>
        </member>
        <member name="M:LTest.Http.Services.HttpMethodService.GetHttpMethodForAction(System.Reflection.MethodInfo)">
            <summary>
            Returns the <see cref="T:System.Net.Http.HttpMethod"/> for a controller action.
            </summary>
            <param name="action">Controller action.</param>
        </member>
        <member name="T:LTest.Http.Services.HttpRequestBuilder">
            <summary>
            Builder for HTTP requests.
            </summary>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestBuilder.#ctor(LTest.Http.Services.HttpMethodService,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:LTest.Http.Services.HttpRequestBuilder"/> class.
            </summary>
            <param name="httpMethodService"><see cref="T:LTest.Http.Services.HttpMethodService"/> object.</param>
            <param name="serviceProvider">Service provider.</param>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestBuilder.CreateFor``1(System.Func{``0,System.String})">
            <summary>
            Creates a HTTP request object for a controller's action.
            </summary>
            <typeparam name="TController">Type of the controller.</typeparam>
            <param name="actionNameSelector">A lambda that returns the nameof(Action).</param>
        </member>
        <member name="T:LTest.Http.Services.HttpRequestBuilder`1">
            <summary>
            Builder for HTTP requests.
            </summary>
            <typeparam name="TController">Type of the controller.</typeparam>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestBuilder`1.#ctor(LTest.Http.Services.HttpMethodService,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:LTest.Http.Services.HttpRequestBuilder`1"/> class.
            </summary>
            <param name="httpMethodService"><see cref="T:LTest.Http.Services.HttpMethodService"/> object.</param>
            <param name="serviceProvider">Service provider.</param>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestBuilder`1.CreateFor(System.Func{`0,System.String})">
            <summary>
            Creates a HTTP request object for a controller's action.
            </summary>
            <param name="actionNameSelector">A lambda that returns the nameof(Action).</param>
        </member>
        <member name="T:LTest.Http.Services.HttpRequestService">
            <summary>
            Helper class to build and send the HTTP request.
            </summary>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestService.#ctor(System.String,System.String,System.Net.Http.HttpMethod,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:LTest.Http.Services.HttpRequestService"/> class.
            </summary>
            <param name="controllerName">Controller name.</param>
            <param name="actionName">Action name.</param>
            <param name="method">Http method.</param>
            <param name="serviceProvider">Service provider.</param>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestService.SetHeaders(System.Action{System.Net.Http.Headers.HttpRequestHeaders})">
            <summary>
            Helper method to set HTTP headers in a chainable way.
            </summary>
            <param name="httpHeadersAction">Lambda to set the HTTP headers.</param>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestService.SetJsonContent(System.Object)">
            <summary>
            Helper method to set json HTTP content.
            </summary>
            <param name="content">The json object.</param>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestService.SetContent(System.Net.Http.HttpContent)">
            <summary>
            Helper method to set the HTTP content in a chainable way.
            </summary>
            <param name="content">HTTP content object.</param>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestService.SetUriValues(System.Action{System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            Sets uri values.
            </summary>
            <param name="action">Action to set uri values.</param>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestService.ConfigureHttpRequest(System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Helper method to configure anything for the HTTP request in a chainable way.
            </summary>
            <param name="configureAction">The action to configure the HTTP request.</param>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestService.SetLabel(System.String)">
            <summary>
            Adds label to the request which will be added to logs.
            </summary>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestService.OverrideIsExpectedLogSnifferLogAction(System.Func{LTest.LogSniffer.LogSnifferEvent,System.Boolean},System.Boolean)">
            <summary>
            Overrides the global is expected logs action. Pass null to restore changes.
            </summary>
            <param name="action">Action.</param>
            <param name="autoRestoreAfterSend">Whether to automatically restore is unexpected log sniffer event action.</param>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestService.Assert">
            <summary>
            Starts assertion builder phase.
            </summary>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestService.Assert``1">
            <summary>
            Starts assertion builder phase.
            </summary>
        </member>
        <member name="M:LTest.Http.Services.HttpRequestService.ToCurl">
            <summary>
            Generates curl from the request.
            </summary>
        </member>
        <member name="T:LTest.Http.Services.LinkGeneratorService">
            <summary>
            A service that can return request uri for a controller action.
            </summary>
        </member>
        <member name="M:LTest.Http.Services.LinkGeneratorService.#ctor(Microsoft.AspNetCore.Routing.LinkGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:LTest.Http.Services.LinkGeneratorService"/> class.
            </summary>
            <param name="linkGenerator"><see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/> service.</param>
        </member>
        <member name="M:LTest.Http.Services.LinkGeneratorService.GetRequestUri(System.String,System.String,System.Object)">
            <summary>
            Generates the request uri for a controller action.
            </summary>
            <param name="actionName">The name of the controller action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="values">Uri values if there are any.</param>
        </member>
        <member name="T:LTest.IntegrationTestServiceProviderExtensions">
            <summary>
            Extensions for integration test service provider.
            </summary>
        </member>
        <member name="M:LTest.IntegrationTestServiceProviderExtensions.GetHttpRequestBuilder(LTest.IntegrationTestServiceProvider)">
            <summary>
            Returns the http request builder.
            </summary>
            <param name="serviceProvider">Integration test service provider.</param>
        </member>
        <member name="M:LTest.IntegrationTestServiceProviderExtensions.GetHttpRequestBuilder``1(LTest.IntegrationTestServiceProvider)">
            <summary>
            Returns the http request builder.
            </summary>
            <param name="serviceProvider">Integration test service provider.</param>
            <typeparam name="TController">Type of the controller.</typeparam>
        </member>
        <member name="T:LTest.ServiceCollectionExtensions">
            <summary>
            ServiceCollectionExtensions.
            </summary>
        </member>
        <member name="M:LTest.ServiceCollectionExtensions.AddTestHttp(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{LTest.Http.Configuration.HttpConfigurationBuilder})">
            <summary>
            Adds services for Http testing.
            </summary>
            <param name="services">IServiceCollection.</param>
            <param name="configAction">Configuration action.</param>
        </member>
    </members>
</doc>
